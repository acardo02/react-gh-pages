{"version":3,"sources":["pages/Login.js","Components/Loading/Loading.js","Components/Comment/Comment.js","Components/AddComment/AddComment.js","Components/Post/Post.js","Components/Container/ContainerPost.js","Components/PostFrom/PostFrom.js","pages/Main.js","Components/ContainerOwned/Owned.js","pages/Posts.js","Components/Navbar/Navbar.js","Components/Layout.js/Layout.js","App.js","index.js"],"names":["authURl","showAlertEmptyParameters","swal","title","text","icon","button","timer","ShowAlertError","response","message","status","Login","navigate","useNavigate","username","useRef","password","useState","on","isOn","e","a","preventDefault","usernameValue","current","value","passwordValue","axios","post","localStorage","setItem","data","token","role","className","onSubmit","htmlFor","id","placeholder","type","ref","onClick","z","document","getElementById","Loading","size","Comment","info","description","user","AddComment","afterSubmit","inputVal","setInputVal","body","patch","headers","Authorization","getItem","onChange","target","Post","struct","_id","image","createdAt","likes","comments","includes","liked","setLiked","length","likesCount","setLikesCount","showComments","setShowComments","commentState","setCommentState","console","log","Date","toLocaleDateString","src","alt","map","it","shortid","generate","comment","val","ContainerPost","setPosts","useEffect","get","getPosts","PostFrom","formData","FormData","Object","fromEntries","entries","alert","active","res","classsName","name","Main","whoami","setWhoami","isVisibleForm","setIsvisibleForm","Autorization","getIdentity","Owned","Posts","Navbar","Layout","App","element","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2b4d796e.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { FaTruckMonster, FaUserCircle } from 'react-icons/fa';\r\nimport { FaKey } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport swal from 'sweetalert';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\r\n// url de la API https://posts-pw2021.herokuapp.com/\r\n//creamos la Url bases para utilizar en el proyecto\r\n//repo https://github.com/TestClasss/evaluacion8proyectofinal-grupo50.git\r\nconst postURl = 'https://posts-pw2021.herokuapp.com/api/v1/post';\r\nconst authURl = 'https://posts-pw2021.herokuapp.com/api/v1/auth';\r\n\r\n\r\n\r\n//Creamos el componente login \r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n    //creamos una referencia para el input de usuario\r\n    const username = useRef(null);\r\n    const password = useRef(null);\r\n\r\n    //usamos un estado para el icono de vista de contrase√±a\r\n    const [on, isOn] = useState(true);\r\n\r\n\r\n    let text = '';\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        const usernameValue = username.current.value;\r\n        const passwordValue = password.current.value;\r\n\r\n        //caso que no se llenen los campos se muestra una alerta\r\n        if (usernameValue === '' || passwordValue === '') {\r\n            showAlertEmptyParameters();\r\n        }\r\n\r\n\r\n        //hacemos la peticion de login usando axios\r\n        try {\r\n            const response = await axios.post(`${authURl}/signin`,\r\n                {\r\n                    //mandamos el usuario y contrase√±a\r\n                    username: usernameValue,\r\n                    password: passwordValue\r\n                });\r\n            //mandamos el token retornda por la api al localstorage\r\n            if (response.status === 200) {\r\n                localStorage.setItem('token', response.data.token);\r\n                localStorage.setItem('role', response.data.role);\r\n                navigate('/');\r\n            }\r\n        } catch (error) {\r\n            ShowAlertError(error.response);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"text-black flex flex-col justify-center mx-auto items-center w-80 h-screen max-w-screen-sm md:w-auto\"\r\n            onSubmit={onSubmit}>\r\n            <div className=\"flex flex-col space-y-1 my-2\">\r\n                <label htmlFor=\"l-username\" className=\"text-lg font-medium font-mono inline-flex\">\r\n                    <FaUserCircle className=\"mr-1\" /> Username\r\n                </label>\r\n                <input className=\"border-2 rounded-lg\" id=\"l-username\" placeholder=\"Username\" type=\"text\" ref={username} />\r\n            </div>\r\n\r\n            <div className=\"flex flex-col space-y-1 justify-center ml-4\">\r\n\r\n                <label htmlFor=\"l-password\" className=\"text-lg font-medium font-mono inline-flex\" >\r\n                    <FaKey className=\"mr-1\" /> Password\r\n                </label>\r\n\r\n                <div className=\"inline-flex justify-center items-center\">\r\n                    <input className=\"border-2 rounded-lg\" id=\"l-password\" placeholder=\"Password\" type={text} ref={password} />\r\n                    {\r\n                        on ? <AiFillEyeInvisible className=\"w-5 h-5 ml-2\" onClick={() => {\r\n                            var z = document.getElementById(\"l-password\");\r\n                            isOn(!on)\r\n                            z.type = 'text'\r\n                        }} /> :\r\n                            <AiFillEye className=\"w-5 h-5\" onClick={() => {\r\n                                var z = document.getElementById(\"l-password\");\r\n                                isOn(!on)\r\n                                z.type = 'password'\r\n                            }} />\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <button className=\"w-full bg-black text-white rounded-2xl py-2 my-3\" type=\"submit\">Login</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n//funcion para mostrar alerta\r\nconst showAlertEmptyParameters = () => {\r\n    swal({\r\n        title: \"Parametros vacios\",\r\n        text: \"Por favor llene todos los campos\",\r\n        icon: \"warning\",\r\n        button: \"Aceptar\",\r\n        timer: 3000\r\n    });\r\n}\r\n\r\n//creamos la funcion para mostrar alerta de error\r\nconst ShowAlertError = (response) => {\r\n    let message = '';\r\n    let title = '';\r\n\r\n    if (response.status === 401) {\r\n        message = 'Usuario o contrase√±a incorrectos';\r\n        title = 'Error 401';\r\n    }\r\n    else if (response.status === 500) {\r\n        message = 'Error del servidor';\r\n        title = 'Error 500';\r\n    }\r\n    else if (response.status === 404) {\r\n        title = 'Error 404';\r\n        message = 'Usuario no encontrado';\r\n    }\r\n    swal({\r\n        title: title,\r\n        text: message,\r\n        icon: \"error\",\r\n        button: \"Aceptar\",\r\n        timer: 3000\r\n    });\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport {IoMdRefreshCircle} from \"react-icons/io\";\r\n\r\nconst Loading = () => (\r\n    <div className=\"flex flex-col justify-center items-center absolute top-0 left-0 z-20 bg-white h-screen w-screen\">\r\n        <IoMdRefreshCircle className=\"text-black animate-spin\" size={50}/>\r\n        <h1 className=\"font-bold text-3xl\">Loading....</h1>\r\n    </div>\r\n)\r\n\r\nexport default Loading;","import React from 'react';\r\n\r\nconst Comment = ({ info }) => {\r\n    const { description, user } = info;\r\n\r\n    return (\r\n        <div className=\"w-full border-t my-3\">\r\n            <h1 className=\"mt-2 text-black text-sm font-medium text-blue-400\">\r\n                @\r\n                { user?.username }\r\n            </h1>\r\n            <p className=\"text-xs pl-4\">{ description }</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;","import axios from 'axios';\r\nimport React, { useState } from 'react';\r\n\r\nconst AddComment = ({ post, afterSubmit }) => {\r\n    const [inputVal, setInputVal] = useState('');\r\n\r\n    function onChange(e) {\r\n        setInputVal(e.target.value);\r\n    }\r\n\r\n    async function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const body = {\r\n            description: inputVal,\r\n        };\r\n\r\n        await axios.patch(`https://posts-pw2021.herokuapp.com/api/v1/post/comment/${post}`, body, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n        });\r\n\r\n        setInputVal('');\r\n\r\n        afterSubmit(body);\r\n    }\r\n\r\n    return (\r\n        <form className=\"w-full\" onSubmit={onSubmit}>\r\n            <input\r\n                value={inputVal}\r\n                onChange={onChange}\r\n                className=\"px-4 py-2 w-full rounded-2xl text-gray-800 border-2 border-blue-500 text-xs\"\r\n                type=\"text\"\r\n                placeholder=\"Presiona enter para comentar\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default AddComment;","import shortid from 'shortid';\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport {BsHeartFill} from 'react-icons/bs';\r\nimport {FaCommentAlt} from 'react-icons/fa';\r\nimport Comment from '../Comment/Comment';\r\nimport AddComment from '../AddComment/AddComment';\r\n\r\nconst Post = ({username, struct}) => {\r\n    const {_id, title, description, image, user, createdAt, likes, comments} = struct;\r\n\r\n    const [liked, setLiked] = useState(likes.includes({username}));\r\n    const [likesCount, setLikesCount] = useState(likes.length); \r\n    const [showComments, setShowComments] = useState(false);\r\n    const [commentState, setCommentState] = useState(comments);\r\n\r\n    function addComment(comment) {\r\n        const val = [...commentState, { ...comment, user: { username } }];\r\n\r\n        setCommentState(val);\r\n    }\r\n\r\n    async function likePost() {\r\n        try {\r\n            const { data } = await axios.patch(`https://posts-pw2021.herokuapp.com/api/v1/post/like/${_id}`, null, {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n            });\r\n\r\n            if (!liked) {\r\n                setLikesCount(likesCount + 1);\r\n                setLiked(true);\r\n            } else {\r\n                setLikesCount(likesCount - 1);\r\n                setLiked(false);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function addFav(){\r\n        try{\r\n            const { data } = await axios.patch(`https://posts-pw2021.herokuapp.com/api/v1/post/fav/${_id}`, null, {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n                },\r\n            });\r\n\r\n        }\r\n        catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"flex flex-col bg-red-400 bg-opacity-30 rounded-2xl w-full md:w-72 lg:w-96 p-4 text-black my-4\">\r\n            <div className=\"w-full flex space-around font-bold text-black\">\r\n                <h1 className=\"w-1/2\">\r\n                    @\r\n                    {user?.username}\r\n                </h1>\r\n                <h2 className=\"text-right w-1/2\">{ new Date(createdAt).toLocaleDateString() }</h2>\r\n            </div>\r\n            {\r\n                image && <img className=\"w-full h-40 object-cover my-2 rounded-2xl\" src={image} alt=\"imagen cualquiera\" />\r\n            }\r\n            <div className=\"w-full flex flex-col font-medium text-sm space-y-2\">\r\n                <h1 className=\"\">{ title }</h1>\r\n                <h2 className=\"font-normal text-xs\">{ description }</h2>\r\n            </div>\r\n            <div className=\"w-full mt-4 flex text-white justify-center\">\r\n                <button\r\n                    onClick={likePost}\r\n                    type=\"button\"\r\n                    className={`flex space-x-2 text-xs justify-center items-center w-1/2 ${liked && 'text-red-600'}`}\r\n                >\r\n                    <span><BsHeartFill className=\"mr-2 w-5 h-5 mx-0\" /></span>\r\n                    { likesCount }\r\n                </button>\r\n                <button\r\n                    onClick={() => setShowComments(!showComments)}\r\n                    type=\"button\"\r\n                    className={`flex space-x-2 text-xs justify-centAiOutlineHearter items-center w-1/2 ${showComments && 'text-blue-400'}`}\r\n                >\r\n                    <span><FaCommentAlt className=\"mr-2 text-black w-5 h-5 mx-0\" /></span>\r\n                    { commentState.length }\r\n                </button>\r\n            </div>\r\n            <div className={`${!showComments && 'hidden'} mt-4 w-full flex flex-col items-start`}>\r\n                {\r\n                    comments && commentState.map((it) => (\r\n                        <Comment\r\n                            key={shortid.generate()}\r\n                            info={it}\r\n                        />\r\n                    ))\r\n                }\r\n                <AddComment post={_id} afterSubmit={addComment} />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Post;\r\n\r\n//  <h1>hola panas bienvenidos</h1>\r\n// <AiFillHeart className=\"text-red-500 \" size=\"1.5em\"/>","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../Loading/Loading\";\r\nimport Post from \"../Post/Post\"\r\n//const postURl = 'https://posts-pw2021.herokuapp.com/api/v1/post';\r\n//const authURl = 'https://posts-pw2021.herokuapp.com/api/v1/auth';\r\n\r\nconst ContainerPost = ({ username}) => {\r\n    const [post, setPosts] = useState({\r\n        status: \"loading\",\r\n        data: null,\r\n    });\r\n    \r\n    useEffect(() => {\r\n        async function getPosts() {\r\n            const { data} = await axios.get('https://posts-pw2021.herokuapp.com/api/v1/post/all?limit=10&page=1', {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n            });\r\n\r\n            setPosts({ status: 'DONE', data: data.data });\r\n\r\n            \r\n        }\r\n        getPosts();\r\n    }\r\n    , []);\r\n\r\n\r\n    if (post.status === \"loading\") {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col px-6 py-10 justify-center items-center\">\r\n            {\r\n                post.data && post.data.map((it) => ( <Post username={username} struct={it} key={it._id}/> )) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContainerPost;","import React from \"react\";\r\nimport { AiFillCheckCircle } from 'react-icons/ai';\r\nimport axios from \"axios\";\r\nimport swal from \"sweetalert\";\r\nconst PostFrom = () => {\r\n    async function onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData(e.target);\r\n        const body = Object.fromEntries(formData.entries());\r\n        console.log(body);\r\n\r\n\r\n        if (body.title === '' || body.description === '') return alert('Asegurate de llenar el titulo y la descripcion');\r\n\r\n        const res = await axios.post('https://posts-pw2021.herokuapp.com/api/v1/post/create',{ ...body, active: body.active === 'true' }, {\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`,\r\n            },\r\n        });\r\n\r\n        console.log(res);\r\n    }\r\n\r\n    return(\r\n        <form className=\"lg:w-96 rounded-2xl bg-black mt-4 p-4 font-bold space-y-3 rounded-lg\" onSubmit={onSubmit}>\r\n        <div className=\"flex flex-col text-sm\">\r\n            <label className=\"text-white\" htmlFor=\"title\">T√≠tulo</label>\r\n            <input classsName=\"rounded-full text-gray-200 px-2 py-1 my-1 rounded-xl\" type=\"text\" name=\"title\" id=\"title\"></input>\r\n        </div>\r\n        <div className=\"flex flex-col text-sm\">\r\n            <label className=\"text-white\" htmlFor=\"description\">Descripci√≥n</label>\r\n            <input classsName=\"text-gray-700 ropunded-full px-2 py-1 my-1\" type=\"text\" name=\"description\" id=\"description\"></input>\r\n        </div>\r\n        <div className=\"flex flex-col text-sm\">\r\n            <label className=\"text-white\" htmlFor=\"image\">Imagen</label>\r\n            <input classsName=\"text-gray-700 ropunded-full px-2 py-1 my-1\" type=\"text\" name=\"image\" id=\"image\"></input>\r\n        </div>\r\n        <div className=\"flex flex-row text-sm items-center justify-center\">\r\n            <div className=\"flex text-sm w-1/3\">\r\n                <label className=\"text-white\" htmlFor=\"active\">Activo</label>\r\n                <input className=\"rounded-xl mx-2\"\r\n                type=\"checkbox\" name=\"active\" id=\"active\"></input>\r\n            </div>\r\n        \r\n                <button type=\"submit\" className=\"bg-blue-500 w-2/3 rounded-2xl text-center flex py-1 justify-center items-center font-bold\">\r\n                    <AiFillCheckCircle className=\"mr-2 h-5 w-5\" />\r\n                    Publicar\r\n                </button>\r\n        </div>\r\n    </form>\r\n    \r\n    )\r\n}\r\n\r\nconst showAlertEmptyPara1meters = () => {\r\n    swal({\r\n        title: \"Parametros vacios\",\r\n        text: \"Por favor llene todos los campos\",\r\n        icon: \"warning\",\r\n        button: \"Aceptar\",\r\n        timer: 3000\r\n    });\r\n}\r\n\r\nexport default PostFrom;","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n//import Navbar from \"../Components/Navbar/Navbar.js\";\r\n//import Post from \"../Components/Post/Post.js\";\r\nimport ContainerPost from \"../Components/Container/ContainerPost.js\";\r\nimport { AiFillPlusCircle } from 'react-icons/ai';\r\nimport PostFrom from \"../Components/PostFrom/PostFrom.js\";\r\n\r\nconst Main = () => {\r\n    const [whoami, setWhoami] = useState();\r\n    const [isVisibleForm, setIsvisibleForm] = useState(false);\r\n    const navigate = useNavigate(); \r\n    const user = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n\r\n    //si el usuario no esta logueado lo redireccionamos a la pagina de login\r\n    useEffect(() => {\r\n        async function getIdentity(){\r\n            const {data} = await axios.get(`https://posts-pw2021.herokuapp.com/api/v1/auth/whoami\"`, {\r\n                headers: {\r\n                    Autorization: `Bearer ${user}`,\r\n                },\r\n            });\r\n            setWhoami(data.username);\r\n        }\r\n        if(user === null){\r\n            navigate('/login');\r\n\r\n        getIdentity();\r\n        } \r\n    },[]);\r\n\r\n    return(\r\n        <div>\r\n        {\r\n            role === 'admin'\r\n            && (\r\n                <div className=\"px-6\">\r\n                    <button\r\n                        onClick={() => setIsvisibleForm(!isVisibleForm)}\r\n                        type=\"button\"\r\n                        className=\"w-full md:w-72 lg:w-80 flex justify-center mt-3 p-4 bg-white bg-opacity-30 rounded-2xl\"\r\n                    >\r\n                        <AiFillPlusCircle className=\"stroke text-white h-6 w-6\" />\r\n                    </button>\r\n                    { isVisibleForm && <PostFrom /> }\r\n                </div>\r\n            )\r\n        }\r\n        <ContainerPost username={whoami} />\r\n    </div>\r\n    );\r\n  \r\n};\r\n\r\nexport default Main;","import React,{useEffect,useState} from 'react';\r\nimport axios from 'axios';\r\nimport Post from '../Post/Post';\r\nimport Loading from '../Loading/Loading';\r\n\r\n\r\nconst Owned = ({username}) => {\r\n\r\n    const [post, setPosts] = useState({\r\n        status: \"loading\",\r\n        data: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function getPosts() {\r\n            const { data} = await axios.get('https://posts-pw2021.herokuapp.com/api/v1/post/owned?limit=15&page=0', {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                },\r\n            });\r\n\r\n            setPosts({ status: 'DONE', data: data.data });\r\n\r\n            \r\n        }\r\n        getPosts();\r\n    }, []);\r\n\r\n    if (post.status === \"loading\") {\r\n        return <Loading />\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex flex-col px-6 py-10 justify-center items-center\">\r\n            {\r\n                post.data && post.data.map((it) => ( <Post username={username} struct={it} key={it._id}/> )) \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Owned;","import React from 'react';\r\nimport Owned from '../Components/ContainerOwned/Owned.js';\r\n//import { useNavigate } from 'react-router-dom';\r\n\r\n// de momento es solo una prueba para el layout\r\nconst Posts = () => (\r\n    <>\r\n        <Owned username=\"gp50-admin\"/>\r\n    </>\r\n);\r\n\r\nexport default Posts;","import React, { useState } from \"react\";\r\nimport { TiThMenu } from \"react-icons/ti\";\r\nimport { GrFormClose } from \"react-icons/gr\";\r\n//import { isDOMComponent } from \"react-dom/test-utils\";\r\n\r\n//usaremos un navbar para el menu de navegacion\r\n//de momento tenemos tres opciones\r\n\r\nconst Navbar = () => {\r\n    //usasmos un estado para cambiar el icono del menu\r\n    const [on, isOn] = useState(false);\r\n    \r\n\r\n    return (\r\n        <nav className=\"w-screen flex flex-col items-end relative\">\r\n            <div className=\"w-full flex justify-between items-center\">\r\n                <h1 className=\"pl-4 text-white font-medium text-2xl\">Bienvenido nombre</h1>\r\n                {\r\n                    on\r\n                        ? <GrFormClose className=\"p-2 stroke text-white h-9 w-9 lg:h-15 lg:w-15\" onClick={() => isOn(!on)} />\r\n                        : <TiThMenu className=\"p-2 stroke text-black h-9 w-9 lg:h-15 lg:w-15 \" onClick={() => isOn(!on)} />\r\n                }\r\n            </div>\r\n            <ul className={`${on ? '' : 'hidden'} var text-white bg-black w-screen h-screen max-w-xs absloute nt-10 z-10`}>\r\n                <li className=\"font-bold text-xl h-20 flex justify-center items-center hover:bg-white hover:text-black\">Inicio</li>\r\n                <li className=\"font-bold text-xl h-20 flex justify-center items-center hover:bg-white hover:text-black\">Favoritos</li>\r\n                <li className=\"font-bold text-xl h-20 flex justify-center items-center hover:bg-white hover:text-black\">Mis Posts</li>\r\n\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport { Outlet } from \"react-router\";\r\n\r\n//el outlet sirve para que el router pueda renderizar el componente que le corresponda\r\n\r\n\r\nconst Layout = () => (\r\n    <>\r\n        <Navbar />\r\n        <div>\r\n            <Outlet />\r\n        </div>\r\n    </>\r\n)\r\nexport default Layout;","import React from 'react';\r\nimport './App.css';\r\nimport Login from './pages/Login';\r\nimport Main from './pages/Main';\r\nimport Posts from './pages/Posts';\r\nimport Layout from './Components/Layout.js/Layout';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n}from 'react-router-dom';\r\n\r\nconst App = () => (\r\n  <Router>  \r\n    <Routes>\r\n\r\n      <Route element={<Layout />}>\r\n        <Route exact path=\"/\" element={<Main />} />\r\n        <Route exact path=\"/Posts\" element={<Posts />} />  \r\n      </Route>\r\n\r\n      <Route exact path=\"/Login\" element={<Login />} />\r\n     \r\n    </Routes> \r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}